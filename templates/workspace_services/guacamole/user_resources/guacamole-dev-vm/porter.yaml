---
name: tre-service-dev-vm
version: 0.3.0
description: "An Azure TRE User Resource Template for a Dev VM"
registry: azuretre
dockerfile: Dockerfile.tmpl

credentials:
  - name: azure_tenant_id
    env: ARM_TENANT_ID
  - name: azure_subscription_id
    env: ARM_SUBSCRIPTION_ID
  - name: azure_client_id
    env: ARM_CLIENT_ID
  - name: azure_client_secret
    env: ARM_CLIENT_SECRET

parameters:
  - name: workspace_id
    type: string
  - name: tre_id
    type: string
  - name: parent_service_id
    type: string
    description: "Resource group containing the shared ACR"
    env: PARENT_SERVICE_ID

  # the following are added automatically by the resource processor
  - name: id
    type: string
    description: "An Id for this installation"
    env: id
  - name: tfstate_resource_group_name
    type: string
    description: "Resource group containing the Terraform state storage account"
  - name: tfstate_storage_account_name
    type: string
    description: "The name of the Terraform state storage account"
  - name: tfstate_container_name
    env: tfstate_container_name
    type: string
    default: "tfstate"
    description: "The name of the Terraform state storage container"
  - name: arm_use_msi
    env: ARM_USE_MSI
    default: false
  - name: os_image
    type: string
    default: "Ubuntu 18.04 Data Science VM"
  - name: vm_size
    type: string
    default: "2 CPU | 8GB RAM"
  - name: shared_storage_access
    type: string
    default: "true"
  - name: shared_storage_name
    type: string
    default: "vm-shared-storage"

outputs:
  - name: ip
    type: string
    applyTo:
      - install
  - name: hostname
    type: string
    applyTo:
      - install
  - name: connection_uri
    type: string
    applyTo:
      - install
  - name: azure_resource_id
    type: string
    applyTo:
      - start
      - stop

mixins:
  - exec
  - terraform:
      clientVersion: 1.0.4
  - az

install:
  - terraform:
      description: "Deploy Guacamole User Resource Service (Linux VM)"
      vars:
        workspace_id: "{{ bundle.parameters.workspace_id }}"
        tre_id: "{{ bundle.parameters.tre_id }}"
        parent_service_id: "{{ bundle.parameters.parent_service_id }}"
        arm_client_id: "{{ bundle.credentials.azure_client_id }}"
        arm_client_secret: "{{ bundle.credentials.azure_client_secret }}"
        arm_tenant_id: "{{ bundle.credentials.azure_tenant_id }}"
        arm_use_msi: "{{ bundle.parameters.arm_use_msi }}"
        tre_resource_id: "{{ bundle.parameters.id }}"
        image: "{{ bundle.parameters.os_image }}"
        vm_size: "{{ bundle.parameters.vm_size }}"
        shared_storage_access: "{{ bundle.parameters.shared_storage_access }}"
        shared_storage_name: "{{ bundle.parameters.shared_storage_name }}"
      backendConfig:
        resource_group_name:
          "{{ bundle.parameters.tfstate_resource_group_name }}"
        storage_account_name:
          "{{ bundle.parameters.tfstate_storage_account_name }}"
        container_name: "{{ bundle.parameters.tfstate_container_name }}"
        key: "{{ bundle.parameters.id }}"
      outputs:
        - name: ip
        - name: hostname
        - name: connection_uri

upgrade:
  - terraform:
      description: "Update Guacamole User Resource Service (Linux VM)"
      vars:
        workspace_id: "{{ bundle.parameters.workspace_id }}"
        tre_id: "{{ bundle.parameters.tre_id }}"
        parent_service_id: "{{ bundle.parameters.parent_service_id }}"
        arm_client_id: "{{ bundle.credentials.azure_client_id }}"
        arm_client_secret: "{{ bundle.credentials.azure_client_secret }}"
        arm_tenant_id: "{{ bundle.credentials.azure_tenant_id }}"
        arm_use_msi: "{{ bundle.parameters.arm_use_msi }}"
        tre_resource_id: "{{ bundle.parameters.id }}"
        image: "{{ bundle.parameters.os_image }}"
        vm_size: "{{ bundle.parameters.vm_size }}"
        shared_storage_access: "{{ bundle.parameters.shared_storage_access }}"
        shared_storage_name: "{{ bundle.parameters.shared_storage_name }}"
      backendConfig:
        resource_group_name:
          "{{ bundle.parameters.tfstate_resource_group_name }}"
        storage_account_name:
          "{{ bundle.parameters.tfstate_storage_account_name }}"
        container_name: "{{ bundle.parameters.tfstate_container_name }}"
        key: "{{ bundle.parameters.id }}"
      outputs:
        - name: ip
        - name: hostname
        - name: connection_uri

uninstall:
  - terraform:
      description: "Delete the Guacamole User Resource Service"
      vars:
        workspace_id: "{{ bundle.parameters.workspace_id }}"
        tre_id: "{{ bundle.parameters.tre_id }}"
        parent_service_id: "{{ bundle.parameters.parent_service_id }}"
        arm_client_id: "{{ bundle.credentials.azure_client_id }}"
        arm_client_secret: "{{ bundle.credentials.azure_client_secret }}"
        arm_tenant_id: "{{ bundle.credentials.azure_tenant_id }}"
        arm_use_msi: "{{ bundle.parameters.arm_use_msi }}"
        tre_resource_id: "{{ bundle.parameters.id }}"
        image: "{{ bundle.parameters.os_image }}"
        vm_size: "{{ bundle.parameters.vm_size }}"
        shared_storage_access: "{{ bundle.parameters.shared_storage_access }}"
        shared_storage_name: "{{ bundle.parameters.shared_storage_name }}"
      backendConfig:
        resource_group_name:
          "{{ bundle.parameters.tfstate_resource_group_name }}"
        storage_account_name:
          "{{ bundle.parameters.tfstate_storage_account_name }}"
        container_name: "{{ bundle.parameters.tfstate_container_name }}"
        key: "{{ bundle.parameters.id }}"

start:
  - terraform:
      arguments:
        - "output"
      description: "Get resource ID from Terraform outputs"
      backendConfig:
        resource_group_name:
          "{{ bundle.parameters.tfstate_resource_group_name }}"
        storage_account_name:
          "{{ bundle.parameters.tfstate_storage_account_name }}"
        container_name: "{{ bundle.parameters.tfstate_container_name }}"
        key: "{{ bundle.parameters.id }}"
      outputs:
        - name: azure_resource_id
  - az:
      description:
        "Login to Azure"
      arguments:
        - login
      flags:
        identity:
        username: "{{ bundle.credentials.azure_client_id }}"
  - az:
      description:
        "Start the VM"
      arguments:
        - vm
        - start
      flags:
        ids: "{{ bundle.outputs.azure_resource_id }}"

stop:
  - terraform:
      arguments:
        - "output"
      description: "Get VM hostname and rg from Terraform outputs"
      backendConfig:
        resource_group_name:
          "{{ bundle.parameters.tfstate_resource_group_name }}"
        storage_account_name:
          "{{ bundle.parameters.tfstate_storage_account_name }}"
        container_name: "{{ bundle.parameters.tfstate_container_name }}"
        key: "{{ bundle.parameters.id }}"
      outputs:
        - name: azure_resource_id
  - az:
      description:
        "Login to Azure"
      arguments:
        - login
      flags:
        identity:
        username: "{{ bundle.credentials.azure_client_id }}"
  - az:
      description:
        "Stop the VM"
      arguments:
        - vm
        - stop
      flags:
        ids: "{{ bundle.outputs.azure_resource_id }}"
